.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.26)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ICHABODHESSIAN 1"
.TH ICHABODHESSIAN 1 "2013-03-09" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Hessian
.SH "OPTIONS"
.IX Header "OPTIONS"
string name
.SH "USAGE"
.IX Header "USAGE"
var browser = new Hessian(\*(L"myHessian\*(R");
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
ichabod is centered around Hessians, headless browsers that can
be controled through method calls. The Hessian class is a wrapper
around Factory.GetTestView(name) which is a direct call into the
\&\*(C+ \s-1API\s0. Hessian provides some additional features, as well
as exposing all of the \*(C+ \s-1API\s0 calls. To use the \*(C+ Call, 
downcase the first letter of the call, as in getElement instead
of GetElement. Within ichabod, the convention is that all direct
to \*(C+ calls are \fBLikeThis\fR and all wrapper calls via javascript
are \fBlikeThis\fR.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can create as many Hessians as your \s-1RAM\s0 will allow, the maximum
I have ever tested on a single machine is 200. Notice that their
is a difference made between \fBHessian\fR and \fBnew Hessian\fR. The 
first means that we are talking about the \*(C+ Object, and the
second means we are talking about the JavaScript helper function.
.PP
Sometimes there is no need to distinguish between them as the
\&\*(C+ Object's \s-1API\s0 is more or less called transparently.
.SH "FUNCTIONS ON THE JS OBJ"
.IX Header "FUNCTIONS ON THE JS OBJ"
.SS "\fBnew Hessian.center|topLeft|topRight...\fP"
.IX Subsection "new Hessian.center|topLeft|topRight..."
You can position your Hessians on the screen by using the methods
\&\fBcenter\fR, \fBtopLeft\fR, \fBtopRight\fR, \fBbottomLeft\fR,\fBbottomRight\fR and
so on.
.PP
These methods are only available on the Javascript helper function.
.SH "FUNCTIONS ON THE \*(C+ OBJ"
.IX Header "FUNCTIONS ON THE  OBJ"
.SS "\fBHessian.\fP\f(BICreateView()\fP\fB\fP"
.IX Subsection "Hessian.CreateView()"
The constructor for the Hessian does not actually create
the webview, the Hessian class is a \*(C+ Wrapper around
QWebView (which you can access directly with GetView).
.PP
This allows you to manipulate the attributes of the 
Hessian with \fBSetAttribute\fR before you actually
create and begin using the view.
.PP
\&\s-1YOU\s0 \s-1MUST\s0 \s-1CALL\s0 \s-1THIS\s0 \s-1FUNCTION\s0 \s-1BEFORE\s0 \s-1YOU\s0 \s-1ACTUALLY\s0 \s-1USE\s0
\&\s-1THE\s0 \s-1VIEW\s0! It will segfault otherwise :)
.SS "\fBHessian.SetAttribute(string,string)\fP"
.IX Subsection "Hessian.SetAttribute(string,string)"
You can set some attributes via this method on your Hessian.
In order to use these attributes, you cannot use the
Hessian helper new Hessian, you will have to call
Factory.GetHessian(name) and set it up manually.
.PP
The javascript function new \fIHessian()\fR is just a helper
function to make it easier to create Hessians.
.PP
In theory you can swap out the Hessian backing
by directly setting Hessian.p_inner_object.
.ie n .SS "\fBHessian.SetAttribute(""name"",""SomeNameHere"")\fP"
.el .SS "\fBHessian.SetAttribute(``name'',``SomeNameHere'')\fP"
.IX Subsection "Hessian.SetAttribute(name,SomeNameHere)"
This is usually set by the constructor, so you should actually
be using new Hessian(\*(L"SomeNameHere\*(R"); The name of the Hessian
influences the name of the log file. If you name them all the same,
then they will use a joined log file.
.ie n .SS "\fBHessian.SetAttribute(""cache"",""on"")\fP"
.el .SS "\fBHessian.SetAttribute(``cache'',``on'')\fP"
.IX Subsection "Hessian.SetAttribute(cache,on)"
Will turn file caching on to simulate a normal browser. This is
the default.
.ie n .SS "\fBHessian.SetAttribute(""db"",""on"")\fP"
.el .SS "\fBHessian.SetAttribute(``db'',``on'')\fP"
.IX Subsection "Hessian.SetAttribute(db,on)"
This will give your Hessians access to an \s-1HTML5\s0 sqlite database.
.ie n .SS "\fBHessian.setAttribute(""cookies"",""on"")\fP"
.el .SS "\fBHessian.setAttribute(``cookies'',``on'')\fP"
.IX Subsection "Hessian.setAttribute(cookies,on)"
This will turn on cookie support, it is on by default.
.SH "FUNCTIONS FOR BOTH"
.IX Header "FUNCTIONS FOR BOTH"
.SS "\fBHessian.show\fP"
.IX Subsection "Hessian.show"
While you are developing your test, it will be helpful to actually
see what is going on. You can show a Hessian by calling \fIshow()\fR on the
object.
.PP
Once you have shown the Hessian, you can right click on any element
to access the \fBWebInspector\fR which ships with webkit browsers. This
will help you find Ids and classes on the elements so that you can
simulate clicks.
.SS "\fBHessian.load(url)\fP"
.IX Subsection "Hessian.load(url)"
This will allow you to load a website or local file url.
.PP
.Vb 3
\&        var view = new Hessian("test");
\&        // View is already setup for us, so it\*(Aqs okay to load
\&        view.load("http://localhost:3000");
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Jason Martin <jason@jason\-knight\-martin.com>
